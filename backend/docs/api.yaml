openapi: 3.0.0
info:
  title: ZJNNP Academic Journal API
  description: RESTful API for managing academic journal submissions and reviews
  version: 1.0.0
  contact:
    email: support@zjnnp.com
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT

servers:
  - url: http://localhost:5000/api
    description: Development server
  - url: https://api.zjnnp.com/api
    description: Production server

security:
  - bearerAuth: []

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    User:
      type: object
      properties:
        id:
          type: string
        email:
          type: string
          format: email
        role:
          type: string
          enum: [admin, editor, reviewer, author, reader]
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
    Article:
      type: object
      properties:
        id:
          type: string
        title:
          type: string
        abstract:
          type: string
        authors:
          type: array
          items:
            type: string
        status:
          type: string
          enum: [draft, submitted, under_review, accepted, rejected, published]
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
    Review:
      type: object
      properties:
        id:
          type: string
        articleId:
          type: string
        reviewerId:
          type: string
        status:
          type: string
          enum: [pending, completed]
        comments:
          type: string
        rating:
          type: integer
          minimum: 1
          maximum: 5
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time

paths:
  /auth/login:
    post:
      tags: [Auth]
      summary: Login user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                password:
                  type: string
      responses:
        '200':
          description: Login successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                  user:
                    $ref: '#/components/schemas/User'
        '401':
          description: Invalid credentials

  /auth/register:
    post:
      tags: [Auth]
      summary: Register new user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                password:
                  type: string
                role:
                  type: string
                  enum: [author, reviewer, reader]
      responses:
        '201':
          description: User created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          description: Validation error

  /articles:
    get:
      tags: [Articles]
      summary: List articles
      security:
        - bearerAuth: []
      responses:
        '200':
          description: List of articles
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Article'
    post:
      tags: [Articles]
      summary: Submit new article
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                title:
                  type: string
                abstract:
                  type: string
                file:
                  type: string
                  format: binary
      responses:
        '201':
          description: Article submitted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Article'

  /articles/{id}:
    get:
      tags: [Articles]
      summary: Get article details
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Article details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Article'
        '404':
          description: Article not found

  /reviews:
    get:
      tags: [Reviews]
      summary: List reviews
      security:
        - bearerAuth: []
      responses:
        '200':
          description: List of reviews
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Review'
    post:
      tags: [Reviews]
      summary: Submit review
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Review'
      responses:
        '201':
          description: Review submitted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Review'
